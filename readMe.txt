	«адание1.ƒаны два целых знаковых четырех байтовых числа и две позиции битов i и j (i<j). 
–еализовать алгоритм InsertNumber вставки битов с j-ого по i-ый бит одного числа в другое так, 
чтобы биты второго числа занимали позиции с бита j по бит i (биты нумеруютс€ справа налево). 
–азработать модульные тесты (NUnit и(!) MS Unit Test) дл€ тестировани€ метода.

	«адание2.–еализовать метод FindNextBiggerNumber, который принимает положительное целое число и возвращает
 ближайше наибольшее целое, состо€щее из цифр исходного числа, и - 1 (null), если такого числа не существует.
 –азработать модульные тесты (NUnit или MS Unit Test) дл€ тестировани€ метода.

	«адание3.ƒобавить к методу FindNextBiggerNumber возможность вернуть врем€ нахождени€ заданного числа, 
рассмотрев различные €зыковые возможности. –азработать модульные тесты (NUnit или MS Unit Test) дл€ тестировани€ метода.

	«адание4.–еализовать метод FilterDigit который принимает список целых чисел и фильтрует список, 
таким образом, чтобы на выходе остались только числа, содержащие заданную цифру. LINQ не использовать! 
 –азработать модульные тесты (NUnit или MS Unit Test) дл€ тестировани€ метода.
 
	«адание5.–еализовать алгоритм FindNthRoot, позвол€ющий вычисл€ть корень n-ой степени ( n?N ) 
из числа ( a?R ) методом Ќьютона с заданной точностью. –азработать модульные тесты 
(NUnit и (или) MS Unit Test) дл€ тестировани€ метода. 
